/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import common.DistributedLibraryInterface;
import java.awt.HeadlessException;
import java.rmi.RemoteException;
import javax.swing.JOptionPane;

/**
 *
 * @author Chale
 */
public class FrmViewRule extends javax.swing.JInternalFrame {

     String[] libNameList;  
     String[] libIdList; 
     int size=0;
    /**
     * Creates new form FrmViewRule
     */
    public FrmViewRule() {
        initComponents();      
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbLibrary = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblRule = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Rules ");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        cmbLibrary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLibraryActionPerformed(evt);
            }
        });

        jLabel1.setText("Library :");

        tblRule.setAutoCreateRowSorter(true);
        tblRule.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Code", "Patron Catagory", "Item Type", "Check Out Allowed", "Loan Period", "Renewal Allowed", "Fine Amount", "Fine Charge Interval"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Double.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblRule);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 803, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbLibrary, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbLibrary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addGap(36, 36, 36))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        getLibraryList();       
    }//GEN-LAST:event_formInternalFrameActivated

    private void cmbLibraryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLibraryActionPerformed
        viewRules();
    }//GEN-LAST:event_cmbLibraryActionPerformed

    //***********************************************************************************////
    private void getLibraryList() {
        try {
            String[][] libList;
            ClientServerInfo lookup = new ClientServerInfo();
            DistributedLibraryInterface listLib;
            listLib = lookup.getLookup();
            if (listLib == null) {
                throw new java.net.ConnectException();
            }
            libList = listLib.getLibrary();
            size =  libList.length;
            libNameList = new String[size];  
            libIdList = new String[size]; 
            for(int i=0; i<size; i++) {
                libIdList[i] = libList[i][0];//library id
                libNameList[i] = libList[i][1];   //library name             
                this.cmbLibrary.addItem((Object)libNameList[i]);
            }         
        } catch (java.net.ConnectException conex) {
            JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void viewRules() {
          try {
            int id = Integer.parseInt(libIdList[this.cmbLibrary.getSelectedIndex()]);
            Object[][] ruleInfo;
            ClientServerInfo lookup = new ClientServerInfo();
            DistributedLibraryInterface viewRule;
            viewRule = lookup.getLookup();
            if (viewRule == null) {
                throw new java.net.ConnectException();
            }
            ruleInfo = viewRule.viewRules(id);
            if (ruleInfo.length==0) {
                JOptionPane.showMessageDialog(this, "No record found in "+this.cmbLibrary.getSelectedItem());
            } else {
                String[] str = new String[]{"Code", "Patron catagory", "Item type", "Check Out allowed", "Loan period", "Renewal allowed", "Fine amount", "Fine charge interval"};
                tblRule.setModel(new javax.swing.table.DefaultTableModel(ruleInfo, str));
            }
        } catch (java.net.ConnectException conex) {
            JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (HeadlessException | NumberFormatException | RemoteException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbLibrary;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblRule;
    // End of variables declaration//GEN-END:variables
}
