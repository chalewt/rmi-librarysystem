/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import common.DistributedLibraryInterface;
import java.awt.HeadlessException;
import java.rmi.RemoteException;
import javax.swing.JOptionPane;

/**
 *
 * @author Chale
 */
public class FrmPatronList extends javax.swing.JInternalFrame {

    String[] libNameList;
    String[] libIdList;
    int size = 0;
    /**
     * Creates new form FrmPatronList
     */
    public FrmPatronList() {
        initComponents();
        getRootPane().setDefaultButton(btnSearch);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ppmPatronList = new javax.swing.JPopupMenu();
        ppmiCheckIn = new javax.swing.JMenuItem();
        ppmiCheckOut = new javax.swing.JMenuItem();
        jLabel2 = new javax.swing.JLabel();
        txtCardNumber = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPatronList = new javax.swing.JTable();
        cmbLibrary = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cmbPatronCatagory = new javax.swing.JComboBox();

        ppmiCheckIn.setText("Check In");
        ppmiCheckIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppmiCheckInActionPerformed(evt);
            }
        });
        ppmPatronList.add(ppmiCheckIn);

        ppmiCheckOut.setText("Check Out");
        ppmiCheckOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ppmiCheckOutActionPerformed(evt);
            }
        });
        ppmPatronList.add(ppmiCheckOut);

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Patron List");
        setToolTipText("");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        jLabel2.setText("Card Number :");

        btnSearch.setForeground(new java.awt.Color(0, 51, 255));
        btnSearch.setText("Search");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        tblPatronList.setAutoCreateRowSorter(true);
        tblPatronList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8", "Title 9", "Title 10", "Title 11", "Title 12"
            }
        ));
        tblPatronList.setComponentPopupMenu(ppmPatronList);
        tblPatronList.setGridColor(new java.awt.Color(51, 102, 255));
        jScrollPane1.setViewportView(tblPatronList);

        cmbLibrary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLibraryActionPerformed(evt);
            }
        });

        jLabel3.setText("Library :");

        jLabel11.setText("Catagory :");

        cmbPatronCatagory.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Student", "Acadamic Staff", "Administrative Staff", "Librarian" }));
        cmbPatronCatagory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPatronCatagoryActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCardNumber)
                            .addComponent(cmbPatronCatagory, 0, 141, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbLibrary, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 995, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbLibrary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel11)
                    .addComponent(cmbPatronCatagory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCardNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(btnSearch))
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 416, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated
        getLibraryList();
    }//GEN-LAST:event_formInternalFrameActivated

    private void cmbPatronCatagoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPatronCatagoryActionPerformed
        viewPatron();
    }//GEN-LAST:event_cmbPatronCatagoryActionPerformed

    private void cmbLibraryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLibraryActionPerformed
        viewPatron();
    }//GEN-LAST:event_cmbLibraryActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        if (!"".equals(this.txtCardNumber.getText())) {
            try {
                Object[][] getPat;
                ClientServerInfo lookup = new ClientServerInfo();
                DistributedLibraryInterface viewPatron;
                viewPatron = lookup.getLookup();
                if (viewPatron == null) {
                    throw new java.net.ConnectException();
                }
                getPat = viewPatron.getPatron(this.txtCardNumber.getText());
                if (getPat.length==0) {
                    JOptionPane.showMessageDialog(this, "No record found with card number : " + this.txtCardNumber.getText());
                    this.txtCardNumber.setText("");
                    this.txtCardNumber.requestFocus();
                } else {
                    String[] str = new String[]{"ID", "Name", "Father Name", "Grandfather Name", "Gender", "Faculty", "Department", "Year", "Phone", "E-mail", "Card Number"};
                    tblPatronList.setModel(new javax.swing.table.DefaultTableModel(getPat, str));
                }
            } catch (java.net.ConnectException conex) {
                JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
            } catch (HeadlessException | RemoteException ex) {
                JOptionPane.showMessageDialog(this, ex.toString(), "Distributed Library System", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Please enter card number to search", "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void ppmiCheckInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppmiCheckInActionPerformed
        int row = this.tblPatronList.getSelectedRow();
        ClientClass.patronId = (String) this.tblPatronList.getValueAt(row, 0);
        FrmCheckIn ckin = new FrmCheckIn(null, true);
        ckin.setVisible(true);
    }//GEN-LAST:event_ppmiCheckInActionPerformed

    private void ppmiCheckOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ppmiCheckOutActionPerformed
//        String patId[]=new String[1];
//        int row = this.tblPatronList.getSelectedRow();
//        patId[0] = (String) this.tblPatronList.getValueAt(row, 0);
//        FrmCheckOut.main(patId);
        int row = this.tblPatronList.getSelectedRow();
        ClientClass.patronId = (String) this.tblPatronList.getValueAt(row, 0);
        FrmCheckOut chout = new FrmCheckOut(null, true);
        chout.setVisible(true);                
    }//GEN-LAST:event_ppmiCheckOutActionPerformed

    //***********************************************************************************////
    private void getLibraryList() {
        try {
            String[][] libList;
            ClientServerInfo lookup = new ClientServerInfo();
            DistributedLibraryInterface listLib;
            listLib = lookup.getLookup();
            if (listLib == null) {
                throw new java.net.ConnectException();
            }
            libList = listLib.getLibrary();
            size =  libList.length;
            libNameList = new String[size];  
            libIdList = new String[size]; 
            for(int i=0; i<size; i++) {
                libIdList[i] = libList[i][0];//library id
                libNameList[i] = libList[i][1];   //library name             
                this.cmbLibrary.addItem((Object)libNameList[i]);
            }         
        } catch (java.net.ConnectException conex) {
            JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }    
    private void viewPatron() {
          try {
            int id =  Integer.parseInt(libIdList[this.cmbLibrary.getSelectedIndex()]);
            Object[][] patronInfo;
            ClientServerInfo lookup = new ClientServerInfo();
            DistributedLibraryInterface viewPatron;
            viewPatron = lookup.getLookup();
            if (viewPatron == null) {
                throw new java.net.ConnectException();
            }
            patronInfo = viewPatron.viewPatron(id,this.cmbPatronCatagory.getSelectedItem().toString());
            if (patronInfo.length == 0) {
                JOptionPane.showMessageDialog(this, "No record found in "+this.cmbLibrary.getSelectedItem().toString());
            } else {
                String[] str = new String[]{"ID", "Name", "Father Name", "Grandfather Name", "Gender", "Faculty","Department","Year","Phone","E-mail","Card Number"};
                tblPatronList.setModel(new javax.swing.table.DefaultTableModel(patronInfo, str));
            }
        } catch (java.net.ConnectException conex) {
            JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (HeadlessException | NumberFormatException | RemoteException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox cmbLibrary;
    private javax.swing.JComboBox cmbPatronCatagory;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu ppmPatronList;
    private javax.swing.JMenuItem ppmiCheckIn;
    private javax.swing.JMenuItem ppmiCheckOut;
    private javax.swing.JTable tblPatronList;
    private javax.swing.JTextField txtCardNumber;
    // End of variables declaration//GEN-END:variables
}
