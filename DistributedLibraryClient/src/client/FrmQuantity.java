/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import common.DistributedLibraryInterface;
import java.awt.HeadlessException;
import java.rmi.RemoteException;
import javax.swing.JOptionPane;

/**
 *
 * @author Chale
 */
public class FrmQuantity extends javax.swing.JDialog {

    String[] libNameList;
    String[] libIdList;
    int size = 0;
    
    String[] shelfNameList;
    String[] shelfIdList;
    int shelfSize = 0;
    int quantity=0;
    int acc =0;
    /**
    /**
     * Creates new form FrmQuantity
     * @param parent
     * @param modal
     */
    public FrmQuantity(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        getRootPane().setDefaultButton(btnSearch);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtISBN = new javax.swing.JTextField();
        txtQuantity = new javax.swing.JTextField();
        txtNewQuantity = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        txtAuthor = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        pnlLocation = new javax.swing.JPanel();
        cbmShelf = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        btnAdd = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        txtAccessionNumber = new javax.swing.JTextField();
        cmbLibrary = new javax.swing.JComboBox();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Update Quantity");
        setModal(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Book Detail", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), java.awt.Color.blue)); // NOI18N

        jLabel1.setText("ISBN :");

        jLabel2.setText("Quantity :");

        jLabel3.setText("New Qauntity : ");

        txtQuantity.setEditable(false);
        txtQuantity.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        btnSearch.setForeground(new java.awt.Color(0, 0, 255));
        btnSearch.setText("Search");
        btnSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel4.setText("Title :");

        txtTitle.setEditable(false);
        txtTitle.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        txtAuthor.setEditable(false);
        txtAuthor.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N

        jLabel5.setText("Author :");

        btnUpdate.setForeground(new java.awt.Color(0, 0, 255));
        btnUpdate.setText("Update");
        btnUpdate.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                            .addComponent(txtNewQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnUpdate))
                        .addComponent(txtAuthor, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtTitle, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(btnSearch))))
                .addGap(0, 58, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtISBN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(txtAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNewQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(btnUpdate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnCancel.setForeground(new java.awt.Color(0, 0, 255));
        btnCancel.setText("Cancel");
        btnCancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        pnlLocation.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item/Location Information ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 1, 14), new java.awt.Color(0, 0, 255))); // NOI18N

        jLabel12.setText("Shelf :");

        btnAdd.setForeground(new java.awt.Color(51, 102, 255));
        btnAdd.setText("Add");
        btnAdd.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel13.setText("Accession Number :");

        javax.swing.GroupLayout pnlLocationLayout = new javax.swing.GroupLayout(pnlLocation);
        pnlLocation.setLayout(pnlLocationLayout);
        pnlLocationLayout.setHorizontalGroup(
            pnlLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLocationLayout.createSequentialGroup()
                .addGroup(pnlLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, pnlLocationLayout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtAccessionNumber))
                    .addGroup(pnlLocationLayout.createSequentialGroup()
                        .addGap(0, 102, Short.MAX_VALUE)
                        .addGroup(pnlLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAdd)
                            .addGroup(pnlLocationLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbmShelf, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(60, 60, 60))
        );
        pnlLocationLayout.setVerticalGroup(
            pnlLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLocationLayout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(pnlLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtAccessionNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(pnlLocationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(cbmShelf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        cmbLibrary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLibraryActionPerformed(evt);
            }
        });

        jLabel11.setText("Library :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbLibrary, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 80, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCancel)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnlLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(45, 45, 45))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbLibrary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(4, 4, 4)
                .addComponent(pnlLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCancel)
                .addContainerGap(35, Short.MAX_VALUE))
        );

        setSize(new java.awt.Dimension(508, 525));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
                      
        if (!"".equals(this.txtNewQuantity.getText())) {
            int q;
            boolean saved;      
            ClientServerInfo lookup = new ClientServerInfo();
            DistributedLibraryInterface addBiblio;     
            try {
                q = Integer.parseInt(this.txtQuantity.getText())+ Integer.parseInt(txtNewQuantity.getText());
                addBiblio = lookup.getLookup();
                if (addBiblio == null) {
                    throw new java.net.ConnectException();
                }
                saved = addBiblio.updateQuantity(q,this.txtISBN.getText());
                if (saved) {
                    JOptionPane.showMessageDialog(this, "Successfully updated.\n You have to add "+this.txtNewQuantity.getText()+" item(s)", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
                    quantity = Integer.parseInt(this.txtNewQuantity.getText());
                    acc =Integer.parseInt(this.txtQuantity.getText())+1;                   
                    this.btnUpdate.setVisible(false);
                    this.txtNewQuantity.setEditable(false);
                    this.btnAdd.setVisible(true);
                    this.txtAccessionNumber.setEditable(true);
                    this.txtAccessionNumber.setText(libIdList[this.cmbLibrary.getSelectedIndex()]+"/"+this.txtISBN.getText()+"/"+acc);//auto fill Accession Number initially
                } else {
                    JOptionPane.showMessageDialog(this, "Oops! Patron registration  failed.");
                    // this.dispose();
                }
            } catch (java.net.ConnectException conex) {
                JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            } catch (HeadlessException | NumberFormatException | RemoteException ex) {
                JOptionPane.showMessageDialog(this, ex.toString(), "Distributed Library System", JOptionPane.ERROR_MESSAGE);
            }
        } else if ("".equals(this.txtNewQuantity.getText())) {
            JOptionPane.showMessageDialog(this, "please enter new quantity.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            this.txtNewQuantity.requestFocusInWindow();
        } else {
            JOptionPane.showMessageDialog(this, "Please check your entry", "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
         if(!"".equals(this.txtISBN.getText())) {
            searchByISBN(this.txtISBN.getText());            
        }
        else {
            JOptionPane.showMessageDialog(this, "Please enter ISBN to search", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.btnAdd.setVisible(false);
        this.txtAccessionNumber.setEditable(false);
        this.txtNewQuantity.setEditable(false);
        this.btnUpdate.setVisible(false); 
        getLibraryList();
        if (!"".equals(ClientClass.isbn)) {
            this.txtISBN.setText(ClientClass.isbn);
            searchByISBN(ClientClass.isbn);
            ClientClass.isbn = "";
        }
    }//GEN-LAST:event_formWindowOpened

    private void cmbLibraryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLibraryActionPerformed
         getShelfList();
    }//GEN-LAST:event_cmbLibraryActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String[] itemList = new String[4];                 
        if (!"".equals(this.txtAccessionNumber.getText())&& quantity > 0) {
            boolean saved;         
            ClientServerInfo lookup = new ClientServerInfo();
            DistributedLibraryInterface addBiblio;
            itemList[0] = this.txtAccessionNumber.getText();
            itemList[1] = this.txtISBN.getText();
            itemList[2] = shelfIdList[this.cbmShelf.getSelectedIndex()];
            itemList[3] = "0";            
            try {
                addBiblio = lookup.getLookup();
                if (addBiblio == null) {
                    throw new java.net.ConnectException();
                }               
                saved = addBiblio.addItem(itemList);
                if(saved) {
                    quantity--; 
                    acc++;
                    if(quantity > 0) {////auto fill Accession Number with simple libid/isbn/quantity in each time
                        this.txtAccessionNumber.setText(libIdList[this.cmbLibrary.getSelectedIndex()] + "/" + this.txtISBN.getText() + "/" + acc);
                        this.txtAccessionNumber.requestFocus();
                    }
                }
            } catch (java.net.ConnectException conex) {
                JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            } catch (RemoteException ex) {
                JOptionPane.showMessageDialog(this, ex.toString(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        } else if ("".equals(this.txtAccessionNumber.getText())) {
            JOptionPane.showMessageDialog(this, "Accession Number can't be left blank", "Input Error", JOptionPane.ERROR_MESSAGE);
            this.txtISBN.requestFocusInWindow();
        } else if (quantity == 0) {            
            JOptionPane.showMessageDialog(this, "You have Successfuly registered all of your " + txtNewQuantity.getText() + " item(s).", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            this.btnAdd.setVisible(false);
            this.txtAccessionNumber.setText("");
            this.txtAccessionNumber.setEditable(false);            
            this.btnUpdate.setVisible(false);            
            this.txtISBN.setText("");
            this.txtTitle.setText("");
            this.txtAuthor.setText("");
            this.txtQuantity.setText("");
            this.txtNewQuantity.setText("");
            this.txtNewQuantity.setEditable(false);
            this.txtISBN.requestFocus();
        } else {
            JOptionPane.showMessageDialog(this, "Check Accession Number your entry", "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAddActionPerformed

     //***********************************************************************************////
    private void getLibraryList() {
        try {
            String[][] libList;
            ClientServerInfo lookup = new ClientServerInfo();
            DistributedLibraryInterface listLib;
            listLib = lookup.getLookup();
            if (listLib == null) {
                throw new java.net.ConnectException();
            }
            libList = listLib.getLibrary();
            size =  libList.length;
            libNameList = new String[size];  
            libIdList = new String[size]; 
            for(int i=0; i<size; i++) {
                libIdList[i] = libList[i][0];//library id
                libNameList[i] = libList[i][1];   //library name             
                this.cmbLibrary.addItem((Object)libNameList[i]);
            }         
        } catch (java.net.ConnectException conex) {
            JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (RemoteException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void getShelfList() {
        try {            
            int libId = Integer.parseInt(libIdList[this.cmbLibrary.getSelectedIndex()]);
            String[][] shelfList;
            ClientServerInfo lookup = new ClientServerInfo();
            DistributedLibraryInterface listShelf;
            listShelf = lookup.getLookup();
            if (listShelf == null) {
                throw new java.net.ConnectException();
            }
            shelfList = listShelf.getShelfList(libId);
            shelfSize =  shelfList.length;
            shelfNameList = new String[shelfSize];  
            shelfIdList = new String[shelfSize]; 
            this.cbmShelf.removeAllItems();//remove previous items
            for(int i=0; i<shelfSize; i++) {
                shelfIdList[i] = shelfList[i][0];//Shelf id
                shelfNameList[i] = shelfList[i][1];   //shelf name             
                this.cbmShelf.addItem((Object)shelfNameList[i]);
            }         
        } catch (java.net.ConnectException conex) {
            JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (NumberFormatException | RemoteException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }
    private void searchByISBN(String isbn) {
          try {
            int id =  Integer.parseInt(libIdList[this.cmbLibrary.getSelectedIndex()]);
            Object[][] biblioInfo;
            ClientServerInfo lookup = new ClientServerInfo();
            DistributedLibraryInterface search;
            search = lookup.getLookup();
            if (search == null) {
                throw new java.net.ConnectException();
            }
            biblioInfo = search.searchRecordByISBN(id, isbn);
            if (biblioInfo.length == 0) {
                JOptionPane.showMessageDialog(this, "No record found with ISBN : "+this.txtISBN.getText());
                this.txtISBN.setText("");
                this.txtISBN.requestFocus();
            } else {
                size = biblioInfo.length;
                this.btnUpdate.setVisible(true); 
                for(int i=0; i<size;i++) {
                    this.txtTitle.setText(biblioInfo[i][1].toString());
                    this.txtAuthor.setText(biblioInfo[i][2].toString());
                    this.txtQuantity.setText(biblioInfo[i][8].toString());
                    this.txtNewQuantity.setEditable(true);
                }
            }
        } catch (java.net.ConnectException conex) {
            JOptionPane.showMessageDialog(this, "Connection refused to Server : " + ClientServerInfo.serverName + "\n Check your network connection or \n Contact your Network Administrator.", "Distributed Library System", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (HeadlessException | NumberFormatException | RemoteException ex) {
            JOptionPane.showMessageDialog(this, ex.toString(), "Distributed Library System", JOptionPane.ERROR_MESSAGE);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmQuantity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmQuantity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmQuantity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmQuantity.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the dialog
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                FrmQuantity dialog = new FrmQuantity(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cbmShelf;
    private javax.swing.JComboBox cmbLibrary;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel pnlLocation;
    private javax.swing.JTextField txtAccessionNumber;
    private javax.swing.JTextField txtAuthor;
    private javax.swing.JTextField txtISBN;
    private javax.swing.JTextField txtNewQuantity;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
